{"ast":null,"code":"'use strict';\n\nconst isObject = value => typeof value === 'object' && value !== null; // Customized for this use-case\n\n\nconst isObjectCustom = value => isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\n\nconst mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n  options = {\n    deep: false,\n    target: {},\n    ...options\n  };\n\n  if (isSeen.has(object)) {\n    return isSeen.get(object);\n  }\n\n  isSeen.set(object, options.target);\n  const {\n    target\n  } = options;\n  delete options.target;\n\n  const mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n\n  if (Array.isArray(object)) {\n    return mapArray(object);\n  }\n\n  for (const [key, value] of Object.entries(object)) {\n    let [newKey, newValue, {\n      shouldRecurse = true\n    } = {}] = mapper(key, value, object); // Drop `__proto__` keys.\n\n    if (newKey === '__proto__') {\n      continue;\n    }\n\n    if (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n      newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);\n    }\n\n    target[newKey] = newValue;\n  }\n\n  return target;\n};\n\nmodule.exports = (object, mapper, options) => {\n  if (!isObject(object)) {\n    throw new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n  }\n\n  return mapObject(object, mapper, options);\n};","map":{"version":3,"sources":["/home/muhammadsubhan/Desktop/gritcha/node_modules/map-obj/index.js"],"names":["isObject","value","isObjectCustom","RegExp","Error","Date","mapObject","object","mapper","options","isSeen","WeakMap","deep","target","has","get","set","mapArray","array","map","element","Array","isArray","key","Object","entries","newKey","newValue","shouldRecurse","module","exports","TypeError"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAjE,C,CAEA;;;AACA,MAAMC,cAAc,GAAGD,KAAK,IAC3BD,QAAQ,CAACC,KAAD,CAAR,IACA,EAAEA,KAAK,YAAYE,MAAnB,CADA,IAEA,EAAEF,KAAK,YAAYG,KAAnB,CAFA,IAGA,EAAEH,KAAK,YAAYI,IAAnB,CAJD;;AAMA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAAM,GAAG,IAAIC,OAAJ,EAAnC,KAAqD;AACtEF,EAAAA,OAAO,GAAG;AACTG,IAAAA,IAAI,EAAE,KADG;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGT,OAAGJ;AAHM,GAAV;;AAMA,MAAIC,MAAM,CAACI,GAAP,CAAWP,MAAX,CAAJ,EAAwB;AACvB,WAAOG,MAAM,CAACK,GAAP,CAAWR,MAAX,CAAP;AACA;;AAEDG,EAAAA,MAAM,CAACM,GAAP,CAAWT,MAAX,EAAmBE,OAAO,CAACI,MAA3B;AAEA,QAAM;AAACA,IAAAA;AAAD,MAAWJ,OAAjB;AACA,SAAOA,OAAO,CAACI,MAAf;;AAEA,QAAMI,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,OAAO,IAAIlB,cAAc,CAACkB,OAAD,CAAd,GAA0Bd,SAAS,CAACc,OAAD,EAAUZ,MAAV,EAAkBC,OAAlB,EAA2BC,MAA3B,CAAnC,GAAwEU,OAA7F,CAA1B;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcf,MAAd,CAAJ,EAA2B;AAC1B,WAAOU,QAAQ,CAACV,MAAD,CAAf;AACA;;AAED,OAAK,MAAM,CAACgB,GAAD,EAAMtB,KAAN,CAAX,IAA2BuB,MAAM,CAACC,OAAP,CAAelB,MAAf,CAA3B,EAAmD;AAClD,QAAI,CAACmB,MAAD,EAASC,QAAT,EAAmB;AAACC,MAAAA,aAAa,GAAG;AAAjB,QAAyB,EAA5C,IAAkDpB,MAAM,CAACe,GAAD,EAAMtB,KAAN,EAAaM,MAAb,CAA5D,CADkD,CAGlD;;AACA,QAAImB,MAAM,KAAK,WAAf,EAA4B;AAC3B;AACA;;AAED,QAAIjB,OAAO,CAACG,IAAR,IAAgBgB,aAAhB,IAAiC1B,cAAc,CAACyB,QAAD,CAAnD,EAA+D;AAC9DA,MAAAA,QAAQ,GAAGN,KAAK,CAACC,OAAN,CAAcK,QAAd,IACVV,QAAQ,CAACU,QAAD,CADE,GAEVrB,SAAS,CAACqB,QAAD,EAAWnB,MAAX,EAAmBC,OAAnB,EAA4BC,MAA5B,CAFV;AAGA;;AAEDG,IAAAA,MAAM,CAACa,MAAD,CAAN,GAAiBC,QAAjB;AACA;;AAED,SAAOd,MAAP;AACA,CAvCD;;AAyCAgB,MAAM,CAACC,OAAP,GAAiB,CAACvB,MAAD,EAASC,MAAT,EAAiBC,OAAjB,KAA6B;AAC7C,MAAI,CAACT,QAAQ,CAACO,MAAD,CAAb,EAAuB;AACtB,UAAM,IAAIwB,SAAJ,CAAe,6BAA4BxB,MAAO,OAAM,OAAOA,MAAO,GAAtE,CAAN;AACA;;AAED,SAAOD,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAAhB;AACA,CAND","sourcesContent":["'use strict';\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\n// Customized for this use-case\nconst isObjectCustom = value =>\n\tisObject(value) &&\n\t!(value instanceof RegExp) &&\n\t!(value instanceof Error) &&\n\t!(value instanceof Date);\n\nconst mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n\toptions = {\n\t\tdeep: false,\n\t\ttarget: {},\n\t\t...options\n\t};\n\n\tif (isSeen.has(object)) {\n\t\treturn isSeen.get(object);\n\t}\n\n\tisSeen.set(object, options.target);\n\n\tconst {target} = options;\n\tdelete options.target;\n\n\tconst mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n\tif (Array.isArray(object)) {\n\t\treturn mapArray(object);\n\t}\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tlet [newKey, newValue, {shouldRecurse = true} = {}] = mapper(key, value, object);\n\n\t\t// Drop `__proto__` keys.\n\t\tif (newKey === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n\t\t\tnewValue = Array.isArray(newValue) ?\n\t\t\t\tmapArray(newValue) :\n\t\t\t\tmapObject(newValue, mapper, options, isSeen);\n\t\t}\n\n\t\ttarget[newKey] = newValue;\n\t}\n\n\treturn target;\n};\n\nmodule.exports = (object, mapper, options) => {\n\tif (!isObject(object)) {\n\t\tthrow new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n\t}\n\n\treturn mapObject(object, mapper, options);\n};\n"]},"metadata":{},"sourceType":"script"}